statements:

decl_stat: DATA_TYPE ID ('=' expression)?
DATA_TYPE: 'int' | 'float' | 'bool' | 'string'
ID: (('a'..'z' | 'A'..'Z')+(NUMBER*))+
NUMBER: ('0'..'9')+('.' ('0'..'9')+)?
STRING: ' " ' (NAME | NUMBER)* ' " '
BOOLEAN: 'true' | 'false'

arithmetic expression:

expr: term (('+'|'-') term)*
term: factor (('*', '/') factor)*
factor NUMBER|+|-| '(' expr ')'

method_declaration: 'function' ID '(' parameters ')' '{' function_statements '}'
parameters: decl_stat (',' decl_stat)*
function_statements: decl_stat | if_statement | while_statement | for_statement

class_declaration: 'class' ID '{'class_statements'}'
class_statements: decl_stat | method_declaration

object_declaration:Type(ID) ID '=' Type '(' parameters ')'
parameters: decl_stat (',' decl_stat)*


if_statement: 'if' '(' boolean_expression ')' '{' statments '}'
 ('else' '{' statments '}')?

while_statement: 'while' '(' boolean_expression ')' '{' statments '}'

for_statement: 'for' '(' declaration_statament ';' boolean_expression; statment')' '{'stat'}'
stat:statements
statement: assignment_stat

comments_stat: '/*' TEXT '*/'

operators:
<, >, <=, >=, !=, ==, !, &&, ||