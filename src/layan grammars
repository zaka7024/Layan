program: statements

statements:
declaration_stat: DATA_TYPE ID ('=' expression)? ((',' ID)('=' expression)?)? ';'
DATA_TYPE: 'int' | 'float' | 'bool' | 'string'
ID: (('a'..'z' | 'A'..'Z')+(NUMBER*))+
NUMBER: ('0'..'9')+('.' ('0'..'9')+)?
STRING: ' " ' (NAME | NUMBER)* ' " '
BOOLEAN: 'true' | 'false'

assignment_stat: (ID | object_assignment | array_assignment) '=' expression
object_assignment: ID '.' ID
array_assignment: ID '[' expr ']'

expression:
expr: and (('||') and)*
and: comp (('&&') and)*
comp: ar(('>' | '<' | '>=' | '<=' | '!=' | '==') or)
ar: term (('+'|'-') term)*
term: factor (('*', '/', '%') factor)*
factor: + | - | '(' expr ')' |  ('!'boolean_expr) | FLOAT| INT | STRING | 'true' | 'false' | ID
 | resolution_object | array_access

method_declaration: 'function' ID '(' parameters? ')' block
block: '{' function_statements '}'
parameters: declaration_stat (',' declaration_stat)*
function_statements: declaration_stat | if_statement | while_statement | for_statement
 | print_statement | return_statement

return_statement:
'return' ';'

class_declaration: 'class' ID (':' TYPE) block
block: '{'class_statements'}'
class_statements: declaration_stat | method_declaration

object_declaration:Type(ID) ID ('(' args ')')? ';'
parameters: declaration_stat (',' declaration_stat)*

resolution_object: ID ('.' (ID | function_call)) ';'

if_statement: 'if' '(' expression ')' block
('else' block')?
block: '{' function_statements '}'

while_statement: 'while' '(' boolean_expression ')' block
block: '{' function_statements '}'

//TODO:: separate the scope of for and global into 2 scopes
for_statement: 'for' '(' variable_declaration ';' boolean_expression; statement')' block
stat:statements
statement: assignment_stat
block: '{' function_statements '}'

comments_stat: '/*' TEXT '*/'

operators:
<, >, <=, >=, !=, ==, !, &&, ||, %
function_call_stat: function_call ';'
function_call: ID '(' ((expression) ',')'* ')'

print_statement:
'print' '(' expression ')' ';'

array_declaration:
Type(ID) ID '[' expr ']' ';'

array_access: ID '[' expr ']'


// TODO:: Expressions
// TODO:: Read from file
// TODO:: Array
// TODO:: List
// TODO:: Foreach
